Week 1

Formed group during the lab session, created the github and jira accounts. I provided suggestions 
on a possible tech stack that we could use for the project (React, Django, SQLlite). Did research 
for custom project proposal (Darius' Idea) on a holiday/travel planner and reviewed other possible 
projects that we were interested in. We had our custom project initial proposal submitted for review
by our tutor and lecturer. New member joined our team on the weekend so we decided to also wait on
his feedback before proceeding with the idea.

Week 2

Received feedback from the lecturer on our custom project proposal, taking in account of the problems
raised by the lecturer, we decided to drop the custom project and discuss upon which prescribed project
we would want to do. As a team we decided to go with the "task planning" project and brainstorm for 
some novelty features that we could implement. 

Some ideas that we came up with:
  - Gantt chart analysis for optimised workflow by priority and user story point.
  - Card/task suggestions based on user's proficiencies and completed tasks.
  - Retro board integration into task planner for "sprint" reviews/ retrospectives.

Created a Sprint 0 to organise tasks that need to be done until project proposal submission. Had a 
meeting with team, to get started on our project proposal. 

Week 3

Tuesday
Received feedback on our idea for some of the novelty ideas that were discussed during the week. We
decided to go with the novely idea that involved building a characteristic task assignment system
based on the proficiencies of the user. I had also came up with the idea of using including a helper
system where users would be recommended websites on how to complete a task if they were unsure of how
it could be done. After discussion with the team we decided to go forth with this idea as our second 
novelty idea. We also starting putting some user story and cards onto our jira board to help with 
getting our project proposal started.

Thursday
We had our team standup, and decided to work on adding cards and user stories to our jira board to be
added to our project proposal later. Newton and Josh started working on the system architecture 
components of the project whilst I continued to add cards to jira for my team members to update on the 
document. Darius had made a start on the story board for the project proposal.

Friday - Sunday
We continued to work on the project proposal and completed on Sunday evening.

Week 4

Tuesday
I made a start in setting up the users app for the project created the models for the Users that are 
going to be in the system. Started working on the sign up and login views for the app, managed to 
finish the register view. 

Thursday
Had our team standup to check up on how everyone was progressing, finished off my login and logout
views so that my team members could begin testing their views with logged in and logged out 
permissions. Some issues I came accross was that users could register and log in views when they were
already logged in and vice versa. Had a discussion with the team to ensure that this problem was 
rectified across all of our views.

Friday - Monday
Had team standups since I was already done with my cards I was there to assist any of my team members
in the event that their workload got too heavy. We were all pretty bad at front end development
so our views are very basic for now and we plan to integrate react into our app at a later stage
(the upcoming sprint).

Week 5
Tuesday 
We had our first Progressive demo Newton, Darius, Joshua and I attended, all of our tasks were finished 
within the sprint and we were able to successfully demo the work we had completed thus far. 
We had an absent team member as they were on a overseas trip, this did not change the outcome of our 
demo as he did not make any code contributions to the first sprint. 

We had also immediately conducted our Retrospective A after our demo. In the retrospective we had 
identified key issues in the first sprint including:
- Inconsistently named files
- Poorly ordered files and folders
- Inconsistent programming styles
- Poorly scheduled stand ups as we did not have allocated times

Each present team member was then allocated a task to rectify these problems in the following 
sprint. We had also decided to conduct sprint planning as well, we assigned team members with 
tasks that each of us were comfortable with completing.

Thursday
Started work on integrating the notification system so that my team members could begin incorporating
notifications to the pieces of work that they were undertaking. Some problems and considerations that
I had come across when conducting research for the notification system consisted of:
- Using a live notification system, which however resulted in us having to host a second server to handle
  notifications
- Using a non live (notifications are updated on page refresh) however we were able to keep to using a
  single server which allowed for better simplicity.

We conducted our standup today and also decided on specific days and times in which we would meet for standups.
After consulting with my team members Darius, Newton and Joshua, we decided it would make most sense to 
use a non live notification system so that other team members could easily and quickly integrate notifications
into their features.

Friday
Finished off integrating the backend of the notification system and started working on a forntend ui for users 
to interact with their notifications.

Some problems I came across was we needed to somehow get notifications across all of our views and it was just
not viable to get notifications through using Django context. Hence I had create a custom tag which when parsed
the request user it would return all of the active notifcation objects related to the user. 

Saturday
Finished off the front end ui for the notification system and created some sidebars for the views of our task 
group pages (task list creation, task creation). I had also began development on a view for moderators and 
group owners to broadcast notifications to members of the group. In preparation for my work with permissions I 
had added some dummy function and code for the permissions checking.

Sunday
Had our second stand up of the week where I would showcase the addition of the side bars to my team members. We 
decided to further incorporate these side bars to all relevant views in our app. I spent the rest of the day 
reviewing some of the changes I made.

Week 6

Monday 
Pushed the changes I made to my branch and made a pull request for my team members to approve into the develop branch.

Thurday 
Began work on adding and attaching proficiencies for users, I added a tags model. 

--------------------------
Not much work was done for the rest of the week as it was flexibility week.

Week 7

Tuesday 
Met up with Darius and Brent, during the tutorial. As Brent had not had his environment set up, I had guided him in 
the tutorial on how to set up his environment for beginning code development when he went home. 

Met up with my team members after uni and passed on my work with user proficiencies and task tagging to Brent. Guided 
him through the basics of Django and we eventually got a base view and model working on his branch. Other team members
also continued or began working on their allocated tasks.

A key discussion which took place in this standup was the integration of React into our system as planned in our initial 
project proposal. It was agreed across our team members that the implementation of React would cause us to use an 
additionally uneccessary layer for our front end development. Also learning React on top of JavaScript, HTML and CSS would
have been too time consuming and risky to finish the sprint.

Thursday
We addressed issues that teams members were having in relation to the project in this standup ensuring everyone had
enough support to continue working on their allocated parts. Later during the day after our standup, I began work
on integrating the user permissions to the app. Darius was in the call with me at this time and later also refined
and developed upon the system in which I was managing the permissions of the users. I during that time worked on 
integrating the backend for how users would be able to connect to task groups. Later during the night I was also able to
create a view in which members could be invited to task groups.

Some key problems we had to consider was how to integrate permissions checking across all the pages of out app. With this 
in mind I was able to find a third party library called "django-braces" which allow for us to develop our own mixins for the
web-app. With this we were able make our class based views inherit classes which require different permissions. This allowed 
for us to not need "@login_required" decorators across our class based views.

Friday
Continued on working with the feature to invite users to task groups, I eventually was then able to integrate accepting and
declining notifications of invitations to task groups. 

Started work on incorporating a dashboard view for users, this included an outline of their assigned tasks from all groups, 
the task groups that they are a member of and a modal to create task groups. 

Saturday
Completed the dashboard and cleaned up all relevant views to allow for better flow and usability of app. Integrated modals
for our filters to allow for easier readabiltiy and navigation. 

Sunday
Implemented a feature to allow for task group owners and moderators to promote, demote and kick users inside a group. We also
during our standup agreed to implement permissions checking across all of our views to align with the permission restrictions 
we had decided in our app design.

Week 8

Monday
Had a meetup with our team members in preparation for our Progresssive demo on Tuesday. Everyone had completed their assigned 
components and we only needed to perform minor tweaks and front end cleanup for the demo on Tuesday. Brent had trouble with 
implementing his part as his branch was somehow always broken. As a last resort, I ended up finishing off the work that Brent 
had started implementing the tagging feature for the Tasks and merging incase it was not going to be ready for tomorrow.

Tuesday
Conducted our Demo B, we were able to successfully go over all of over features that were adding in sprint 2, this time 
everyone was able to show up for the demo. On the same day we also conducted our retrospective where we discussed how 
our sprint went. There were some key issues that were identified across the team including, lingering files that still
had inconsistent naming. Additionally some members also found the integration of Ajax Requests difficult, and the use of 
CSS to style our templates a bit time consuming. Nevertheless, this would have been better than us trying to integrate and
use React which was competing with how Django has been designed. We found the scheduled standup time to be alot better in 
maintaining communication across team members, cleanup of the front end also really allowed for better app design. 

Thursday
This was the next time where everyone was able to get together, except Brent who was absent. In this standup we devoted our
time to focus on sprint planning to assign everyone tasks for this sprint. Looking back we felt that assigned all the tasks 
at once was too restrictive with some members being able to finish their parts earlier and available more often. As such we 
assigned a single task to members on whatever they were most comforatable with. 

Saturday
I began working on the task depency creation so that my peers could begin to use the algorithm. A model was created and 
I started implementing the front end for the detailed view of the tasks as well as the linking functionality. 

Sunday 
Finished off allowing users to be able to select tasks as dependecies of one another and began working on the task help 
system. There was still some front end clean up left to do for the task dependencies but I deduced that it would be more
important for me to get started on working on the novelty feature. 

Week 9 

Tuesday 
Conducted standup with my team members right after class as Tam was sick and we had an online class. We discussed
on what would be the best approach to completing the task help system and Darius had recommended I look into using serpAPI
which allow for us to make google searches. Taking into consideration his recommendation I began work on developing a system
to allow users to get help on their tasks with the click of a button. 

Thursday
Had our standup with the team and I continued work on the help system. Using serpAPI I was able to successfully create a system
in which the app would search google for results based off of the name of the task and the tags that were assigned to it. I also
had tried to add the description to the search by using library that would get keywords from the description. This however did not 
work as intended as it would only grab words by the numbers of times it appeared and were used. Hence, we opted for just using 
the name of the task and it's tags.

Saturday - Sunday
With the finished implementation of the task help system the rest of the week for me was mostly focused on cleaning up the front 
end, and finished off integrating the task dependencies to the Task Dashboard. I finished off creating the UI to show how tasks are
linked and how to access those tasks via using custom tags in our html template (Similar to that of the Notification system). 

Week 10

Monday

Mostly consisted of helping the guys finish up their parts before the demo as I was mostly done with my tasks, we only really had the
task auto scheduling system which Brent took up left to implement. As we were short on time we ended up going for a system were it 
would recommend users based off of their previously completed related tasks, proficiencies and availability. 

Tuesday 
Comepleted out final demo for the project, unforunately whlist about 80% of our features were working we had a bug in realation to 
recommwding the task masters for a task which as a result ended up in causing an error during the demo. This also ended up affecting
the ability to update tasks and view tasks aswell after they were created. Another bug we had was with the generation of tasking 
reports which was a result of deadlines not being specified. Regardless the vast majority of our app was working which was a big 
achievement considering how much functionality we added. 

Thursday - Friday

Began work on writing the documentation for the project report including how to build, setup, configure, and use your system
and functionalities. Finished off writing the documentation on the markdown file but had some issues with transferring it over 
to google documents. Highly reccommend reading the documentation for the app in the README file on the develop branch of our
repository.
